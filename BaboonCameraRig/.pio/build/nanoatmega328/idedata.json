{"env_name": "nanoatmega328", "libsource_dirs": ["/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/lib", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/.pio/libdeps/nanoatmega328", "/Users/matthewterblanche/.platformio/lib", "/Users/matthewterblanche/.platformio/packages/framework-arduino-avr/libraries"], "defines": ["PLATFORMIO=50203", "ARDUINO_AVR_NANO", "F_CPU=16000000L", "ARDUINO_ARCH_AVR", "ARDUINO=10808", "__AVR_ATmega328P__"], "includes": {"build": ["/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/include", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/src", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/include", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/src", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/.pio/libdeps/nanoatmega328/SdFat/src", "/Users/matthewterblanche/.platformio/packages/framework-arduino-avr/libraries/SPI/src", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/.pio/libdeps/nanoatmega328/Encoder", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/.pio/libdeps/nanoatmega328/Encoder/utility", "/Users/matthewterblanche/.platformio/packages/framework-arduino-avr/cores/arduino", "/Users/matthewterblanche/.platformio/packages/framework-arduino-avr/variants/eightanaloginputs"], "compatlib": ["/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/.pio/libdeps/nanoatmega328/Encoder", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/.pio/libdeps/nanoatmega328/Encoder/utility", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/.pio/libdeps/nanoatmega328/Encoder", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/.pio/libdeps/nanoatmega328/Encoder/utility", "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/.pio/libdeps/nanoatmega328/SdFat/src", "/Users/matthewterblanche/.platformio/packages/framework-arduino-avr/libraries/SPI/src", "/Users/matthewterblanche/.platformio/packages/framework-arduino-avr/libraries/EEPROM/src", "/Users/matthewterblanche/.platformio/packages/framework-arduino-avr/libraries/HID/src", "/Users/matthewterblanche/.platformio/packages/framework-arduino-avr/libraries/SoftwareSerial/src", "/Users/matthewterblanche/.platformio/packages/framework-arduino-avr/libraries/Wire/src"], "toolchain": ["/Users/matthewterblanche/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/7.3.0/include", "/Users/matthewterblanche/.platformio/packages/toolchain-atmelavr/lib/gcc/avr/7.3.0/include-fixed", "/Users/matthewterblanche/.platformio/packages/toolchain-atmelavr/avr/include"], "unity": []}, "cc_path": "/Users/matthewterblanche/.platformio/packages/toolchain-atmelavr/bin/avr-gcc", "cxx_path": "/Users/matthewterblanche/.platformio/packages/toolchain-atmelavr/bin/avr-g++", "gdb_path": "/Users/matthewterblanche/.platformio/packages/toolchain-atmelavr/bin/avr-gdb", "prog_path": "/Users/matthewterblanche/Documents/PlatformIO/Projects/BaboonCameraRig/.pio/build/nanoatmega328/firmware.elf", "svd_path": null, "compiler_type": "gcc", "targets": [{"name": "size", "title": "Program Size", "description": "Calculate program size", "group": "Platform"}, {"name": "upload", "title": "Upload", "description": null, "group": "Platform"}, {"name": "uploadeep", "title": "Upload EEPROM", "description": null, "group": "Platform"}, {"name": "fuses", "title": "Set Fuses", "description": null, "group": "Platform"}, {"name": "bootloader", "title": "Burn Bootloader", "description": null, "group": "Platform"}, {"name": "compiledb", "title": "Compilation Database", "description": "Generate compilation database `compile_commands.json`", "group": "Advanced"}, {"name": "clean", "title": "Clean", "group": "General"}, {"name": "cleanall", "title": "Clean All", "group": "General", "description": "Clean a build environment and installed library dependencies"}], "extra": {"flash_images": []}, "cc_flags": "-std=gnu11 -fno-fat-lto-objects -Os -Wall -ffunction-sections -fdata-sections -flto -mmcu=atmega328p", "cxx_flags": "-fno-exceptions -fno-threadsafe-statics -fpermissive -std=gnu++11 -Os -Wall -ffunction-sections -fdata-sections -flto -mmcu=atmega328p"}